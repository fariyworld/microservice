#访问端口
server:
  port: 8002

#mybatis配置
mybatis:
#  config-location: mybatis/mybatis.cfg.xml                              #mybatis 配置文件路径
  type-aliases-package: com.mace.microservice.common.entity           #所有实体类（别名）所在包
  mapper-locations: mybatis/mapper/**/*.xml                 #mapper xml 映射文件 扫描
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl     #记录 sql 到日志
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl   #控制台输出 sql
    map-underscore-to-camel-case: false                     #开启驼峰转换
    cache-enabled: true                                     #开启二级缓存
    lazy-loading-enabled: true                              #启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载
    aggressive-lazy-loading: true                           #当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载
    use-generated-keys: true                                #允许 JDBC 生成主键。需要驱动器支持
    auto-mapping-behavior: partial                          #指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
    default-executor-type: simple                           #这是默认的执行类型（SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新)

#jasypt加密参数
jasypt:
  encryptor:
    password: aqeaqeaeqaeqraq

spring:
#  应用名（一定要配）
  application:
    name: microservice-provider-dept
#  数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            #数据库连接池类型 druid
    driver-class-name: com.mysql.jdbc.Driver                #mysql 驱动包
    url: jdbc:mysql://192.168.88.132:3306/cloudDB02?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8         #数据库名称
    username: root                                          #用户名
    password: ENC(Qml0BS/5j8LD9dyKa+Eo/Y4DhmGofWLQ)         #密码（采用 jasypt 加密配置密码 ）
#    druid连接池配置
    druid:
      name: DruidDataSource-cloudDB02-Dept                  #druid 数据源监控名
      async-init: true                                      #异步初始化连接池
      async-close-connection-enable: true                   #异步关闭连接
      initial-size: 1                                       #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      min-idle: 1                                           #最小连接池数量
      max-active: 3                                         #最大连接池数量
      max-wait: 60000                                       #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      pool-prepared-statements: false                       #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
#      max-pool-prepared-statement-per-connection-size: 100 #当开启缓存 preparedStatement 时配置该项
      test-while-idle: true                                 #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-on-borrow: false
      test-on-return: false
      validation-query: select 1                            #检查数据库连接
      filters: stat,wall,log4j                              #stat 监控 wall sql注入
      filter:
        stat:
          merge-sql: true
          slow-sql-millis: 5000
  aop:
    proxy-target-class: true                                #使用 CGLIB 来实现AOP false:使用的是标准Java的实现。


#客户端注册进eureka服务列表内
eureka:
  client:
    service-url:
#      defaultZone: http://127.0.0.1:9090/eureka                                        # 单机
      defaultZone: http://mace:liuye0425@eureka01.com:7001/eureka/,http://mace:liuye0425@eureka02.com:7002/eureka/   # 集群
  instance:
    instance-id: mocroservice-provider-dept:8002           #自定义服务名称
    prefer-ip-address: true                               #访问路径可以显示 IP 地址

info:
  app.name: $project.artifactId$
  company.name: www.mace.com
  build.artifactId: $project.artifactId$
  build.version: $project.version$
